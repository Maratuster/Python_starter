"""
Задание 2. Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры (4, 6 и 0) и 2 нечетные (3 и 5).
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.
Решите через рекурсию. В задании нельзя применять циклы.
Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""
from my_func_library import get_number


def even_odd_counter(num, even_count, odd_count):
    if num == 0:
        print(
            f"Количество четных и нечетных цифр в числе равно: ({even_count}, {odd_count})")
    else:
        if num % 2 != 0:
            odd_count += 1
        else:
            even_count += 1
        return even_odd_counter(num//10, even_count, odd_count)


number = get_number()
even_counter = 0
odd_counter = 0
even_odd_counter(number, even_counter, odd_counter)